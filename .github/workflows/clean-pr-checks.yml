---
name: Clean PR checks
'on':
  workflow_dispatch:
    inputs:
      pr:
        description: PR to be cleaned
        required: true
      checks:
        description: Checks to be cleaned (comma- or space-separated)
        required: true
        default: >-
          build/alidist/O2Suite/o2/macOS-arm
          build/O2/alidist-dataflow-cs8
          build/O2/alidist-cs8
          build/AliGenerators/generators
          build/AliRoot/alidist
          build/O2/alidist
          build/O2/alidist-dataflow
          build/alidist/O2Suite/o2/macOS
          build/O2/fullCI/alidist
      owner:
        description: Organization
        required: true
        default: 'alisw'
      repo:
        description: Repository
        required: true
        default: 'alidist'

jobs:
  cleanup_pr_checks:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install ali-bot
        run: |
          python3 -m pip install git+https://github.com/alisw/ali-bot@master

      - uses: octokit/graphql-action@v2.x
        id: last_commit
        with:
          query: |
            query last_commit($owner: String!, $name: String!, $pr: Int!) {
              repository(owner: $owner, name: $name) {
                pullRequest(number: $pr) {
                  commits(last: 1) {
                    nodes {
                      commit {
                        oid
                      }
                    }
                  }
                }
              }
            }
          owner: ${{ github.event.inputs.owner }}
          name: ${{ github.event.inputs.repo }}
          pr: ${{ github.event.inputs.pr }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup tests
        run: |
          set -x
          commit=$(jq -r '.repository.pullRequest.commits.nodes[].commit.oid' <<\EOF
          ${{ steps.last_commit.outputs.data }}
          EOF
          )
          echo "$CHECKS" | tr -s '[:space:],' '\n' | while read -r check; do
            set-github-status -c "$REPO@$commit" -s "$check/pending"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.event.inputs.owner }}/${{ github.event.inputs.repo }}
          CHECKS: ${{ github.event.inputs.checks }}
